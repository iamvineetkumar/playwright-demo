name: Playwright Tests
on:
  push:
    branches: [dev]
jobs:
  playwright-tests:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - uses: actions/checkout@v4
      
      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/setup-node@v4
        with:
          node-version: 18
      - name: Install dependencies
        run: npm ci
      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Install yaml module
        run: npm install yaml
      - name: Read test mapping
        id: read_mapping
        run: |
          echo "::set-output name=mapping::$(cat .github/workflows/test_mapping.yml)"
      - name: Determine tests for shard
        id: determine_tests
        run: |
          shard_index=${{ matrix.shardIndex }}
          yaml_data="${{ steps.read_mapping.outputs.mapping }}"
          echo "YAML data: $yaml_data"
          tests=$(node -e "const yaml = require('yaml'); const data = yaml.parse(process.argv[1]); console.log('Parsed data:', data); if (data && data.shards && data.shards[$((shard_index - 1))]) { console.log('Tests for shard $((shard_index)):', data.shards[$((shard_index - 1))].tests.join(', ')); } else { console.log('Tests for shard $((shard_index)):', 'No tests found'); }" "$yaml_data")
          echo "::set-output name=tests::${tests}"
      - name: Print tests in shard
        run: |
          test_list=$(npx playwright test --list)
          echo "Test list:"
          echo "$test_list"
          test_files=$(echo "$test_list" | grep -o)
          total_tests=$(echo "$test_files" | wc -l)
          tests_per_shard=$((total_tests / ${{ matrix.shardTotal }}))
          start_index=$((tests_per_shard * (${{ matrix.shardIndex }} - 1) + 1))
          end_index=$((tests_per_shard * ${{ matrix.shardIndex }}))
          if [[ ${{ matrix.shardIndex }} -eq ${{ matrix.shardTotal }} ]]; then
            end_index=$total_tests
          fi
          echo "Total tests: $total_tests"
          echo "Tests per shard: $tests_per_shard"
          echo "Start index: $start_index"
          echo "End index: $end_index"
          echo "$test_files" | sed -n "${start_index},${end_index}p"



      
      - name: Run Playwright tests
        id: playwright_tests
        run: |
          npx playwright test   --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} | tee executed_tests_shard_${{ matrix.shardIndex }}.txt
      
      - name: Compare executed tests with all tests
        run: |
          all_tests=$(cat executed_tests_shard_${{ matrix.shardIndex }}.txt)
          executed_tests=$(cat executed_tests_shard_${{ matrix.shardIndex }}.txt)
          echo "Executed tests:"
          echo "$executed_tests"
          echo "Not executed tests:"
          diff <(echo "$all_tests") <(echo "$executed_tests") | grep -E "^>" | sed 's/>//g' | sed '/^\s*$/d'
      
      - name: Upload blob report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1
