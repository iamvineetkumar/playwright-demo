name: Playwright Tests

on:
  push:
    branches: [dev]

jobs:
  playwright-tests:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4] # Shard indices remain 1, 2, 3, 4
        shardTotal: [4]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install js-yaml
        run: npm install js-yaml

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Install Playwright browsers
        run: npx playwright install --with-deps
      - name: Install yq
        run: |
          sudo wget https://github.com/mikefarah/yq/releases/download/v4.11.1/yq_linux_amd64 -O /usr/bin/yq
          sudo chmod +x /usr/bin/yq

      - name: Load shard configuration
        id: load_shards
        run: |
          shard_config=$(< .github/workflows/test_mapping.yml)
          echo "::set-output name=shardConfig::$shard_config"

      - name: Print tests in shard
        run: |
          shard_config=$(< .github/workflows/test_mapping.yml)
          shard_index=${{ matrix.shardIndex }}
          shard_tests=$(echo "$shard_config" | yq eval ".shards[$shard_index].tests | .[]" -)
          echo "Shard tests for shard $shard_index:"
          echo "$shard_tests"
      - name: Grant Read-Write Access to test_mapping.yml
        run: |
          chmod +rw .github/workflows/test_mapping.yml
      - name: Run Playwright tests
        id: playwright_tests
        run: |
          shard_config=$(< .github/workflows/test_mapping.yml)
          shard_index=${{ matrix.shardIndex }}
          shard_tests=$(echo "$shard_config" | yq eval ".shards[$shard_index].tests | .[]" -)
          echo "Shard tests for shard $shard_index:"
          echo "$shard_tests"
          
          # Iterate over each test file and execute it
          for test_file in $shard_tests; do
            echo "Running test file: $test_file"
            echo $test_file 
            echo "hey"
            echo $shard_tests
            echo "playwright cmd"
            npx playwright test $test_file --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} | tee executed_tests_shard_${{ matrix.shardIndex }}.txt
        
          done


    




      - name: Upload blob report to GitHub Actions Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: blob-report-${{ matrix.shardIndex }}
          path: blob-report
          retention-days: 1
