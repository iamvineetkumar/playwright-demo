name: Playwright Tests

on:
  push:
    branches: [dev]

jobs:
  playwright-tests:
    timeout-minutes: 4
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4] # Shard indices remain 1, 2, 3, 4
        shardTotal: [4]
    steps:
      - uses: actions/checkout@v4

      - name: Cache Node.js modules
        uses: actions/cache@v2
        with:
          path: ~/.npm
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - name: Install Playwright and dependencies
        run: |
          npm install playwright
          # Add any other dependencies needed for your tests

      - name: Load and Parse JSON File
        id: load_json_data
        run: |
          const fs = require('fs');
          const testsJson = fs.readFileSync('tests/test-case.json', 'utf8');
          console.log(`::set-output name=testsJson::${JSON.stringify(testsJson)}`);
          

      - name: Calculate tests per shard
        id: calculate_tests_per_shard
        run: |
          testsJson = JSON.parse('${{ steps.load_json.outputs.testsJson }}');
          totalTests = testsJson.length;
          testsPerShard = Math.ceil(totalTests / ${{ matrix.shardTotal }});
          echo "::set-output name=testsPerShard::${testsPerShard}"

      - name: Run Playwright tests
        id: playwright_tests
        run: |
          testsJson = JSON.parse('${{ steps.load_json.outputs.testsJson }}');
          shardIndex = ${{ matrix.shardIndex }};
          testsPerShard = ${{ steps.calculate_tests_per_shard.outputs.testsPerShard }};
          startIndex = (shardIndex - 1) * testsPerShard;
          endIndex = Math.min(startIndex + testsPerShard, testsJson.length);
          testsForShard = testsJson.slice(startIndex, endIndex);

          echo "Shard tests for shard $shardIndex:"
          echo "$testsForShard"

          # Iterate over each test file and execute it
          for test in "${testsForShard[@]}"; do
            echo "Running test file: $test"
            npx playwright test $test --shard=${{ matrix.shardIndex }}/${{ matrix.shardTotal }} | tee executed_tests_shard_${{ matrix.shardIndex }}.txt
          done

      - name: Upload test reports
        uses: actions/upload-artifact@v2
        with:
          name: shard-${{ matrix.shardIndex }}-test-reports
          path: executed_tests_shard_${{ matrix.shardIndex }}.txt
