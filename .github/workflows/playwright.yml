name: Playwright Tests

on:
  push:
    branches: [dev]

jobs:
  playwright-tests:
    timeout-minutes: 2
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        shardIndex: [1, 2, 3, 4]
        shardTotal: [4]
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 14

      - name: Install dependencies
        run: npm ci

      - name: Print tests in shard
        run: |
          test_list=$(npx playwright test --list)
          echo "Test list:"
          echo "$test_list"
          test_files=$(echo "$test_list" | grep -o '\[chromium\] › .*' | sed 's/\[chromium\] › //')
          total_tests=$(echo "$test_files" | wc -l)
          tests_per_shard=$((total_tests / ${{ matrix.shardTotal }}))
          start_index=$((tests_per_shard * (${{ matrix.shardIndex }} - 1) + 1))
          end_index=$((tests_per_shard * ${{ matrix.shardIndex }}))
          if [[ ${{ matrix.shardIndex }} -eq ${{ matrix.shardTotal }} ]]; then
            end_index=$total_tests
          fi
          echo "Total tests: $total_tests"
          echo "Tests per shard: $tests_per_shard"
          echo "Start index: $start_index"
          echo "End index: $end_index"
          echo "$test_files" | sed -n "${start_index},${end_index}p"

      - name: Read test mapping
        id: read_mapping
        run: |
          echo "::set-output name=mapping::$(cat test_mapping.yml)"

      - name: Determine tests for shard
        id: determine_tests
        run: |
          shard_index=${{ matrix.shardIndex }}
          test_mapping=$(echo "${{ steps.read_mapping.outputs.mapping }}" | shyaml get-value shards.$((shard_index - 1)).tests)
          echo "::set-output name=tests::${test_mapping}"

      - name: Run Playwright tests
        run: |
          tests="${{ steps.determine_tests.outputs.tests }}"
          npx playwright test "${tests[@]/#/--filter=}"

      - name: Upload test artifacts
        uses: actions/upload-artifact@v2
        if: always()
        with:
          name: test-results
          path: test-results/
